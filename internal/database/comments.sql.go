// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: comments.sql

package database

import (
	"context"
	"database/sql"
)

const createComment = `-- name: CreateComment :one
INSERT INTO comments (id, file_path, commit_hash, line_start, line_end, author, body, resolved)
VALUES (
    gen_random_uuid(),
    $1,
    $2,
    $3,
    $4,
    $5,
    $6,
    $7
)
RETURNING id, file_path, repo, commit_hash, line_start, line_end, author, body, created_at, updated_at, resolved
`

type CreateCommentParams struct {
	FilePath   string
	CommitHash string
	LineStart  int32
	LineEnd    int32
	Author     string
	Body       string
	Resolved   sql.NullBool
}

func (q *Queries) CreateComment(ctx context.Context, arg CreateCommentParams) (Comment, error) {
	row := q.db.QueryRowContext(ctx, createComment,
		arg.FilePath,
		arg.CommitHash,
		arg.LineStart,
		arg.LineEnd,
		arg.Author,
		arg.Body,
		arg.Resolved,
	)
	var i Comment
	err := row.Scan(
		&i.ID,
		&i.FilePath,
		&i.Repo,
		&i.CommitHash,
		&i.LineStart,
		&i.LineEnd,
		&i.Author,
		&i.Body,
		&i.CreatedAt,
		&i.UpdatedAt,
		&i.Resolved,
	)
	return i, err
}
